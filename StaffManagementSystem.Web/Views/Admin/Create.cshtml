@model StaffViewModel
@{
    ViewData["Title"] = "Create Staff";
}

<div class="text-center">
    <div class="card">
        <div class="card-header cardheaderone">
            Create Staff
        </div>
        @using (Html.BeginForm("Create", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmCreateStaff" }))
        {
            @Html.AntiForgeryToken()
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <h5 class="text-start">Employee Detail</h5>
                <hr class="hr" />
                <div class="col-sm-12 row pb-1">
                    <div class="col-md-6 row">
                        @Html.LabelFor(m => m.emp_number,new { @class = "form-label col-sm-5 text-start" })
                        @Html.TextBoxFor(m => m.emp_number, new { @class = "form-control col-sm-7" })
                        @Html.ValidationMessageFor(m => m.emp_number, "", new { @class = "text-danger text-end" })
                    </div>
                </div>
                <h5 class="text-start">Personal Info</h5>
                <hr class="hr" />
                <div class="col-sm-12 row pb-1">
                    <div class="col-md-6 row">
                        @Html.LabelFor(m => m.first_name,new { @class = "form-label col-sm-5 text-start" })
                        @Html.TextBoxFor(m => m.first_name, new { @class = "form-control col-sm-7" })
                        @Html.ValidationMessageFor(m => m.first_name, "", new { @class = "text-danger text-end" })
                    </div>
                    <div class="col-md-6 row">
                        @Html.LabelFor(m => m.last_name,new { @class = "form-label col-sm-5 text-start" })
                        @Html.TextBoxFor(m => m.last_name, new { @class = "form-control col-sm-7" })
                        @Html.ValidationMessageFor(m => m.last_name, "", new { @class = "text-danger text-end" })
                    </div>
                </div>
                <div class="col-sm-12 row pb-1">
                    <div class="col-md-6 row">
                        @Html.LabelFor(m => m.date_of_birth,new { @class = "form-label col-sm-5 text-start" })
                        <div class=" col-sm-7 row">
                            @Html.TextBoxFor(m => m.date_of_birth)
                        </div>
                        @Html.ValidationMessageFor(m => m.date_of_birth, "", new { @class = "text-danger text-end" })
                    </div>
                    <div class="col-md-6 row">
                        @Html.LabelFor(m => m.gender,new { @class = "form-label col-sm-5 text-start" })
                        @Html.DropDownListFor(
                            m => m.gender.Id,
                            new SelectList(Model.GenderDropDownList, "Value", "Text"), new {@class = "form-control col-sm-7" })
                        @Html.ValidationMessageFor(m => m.gender, "", new { @class = "text-danger text-end" })
                    </div>

                </div>
                <h5 class="text-start">Qualification and Experience</h5>
                <hr class="hr" />

                <div class="col-sm-12 row pb-1">
                    <div class="col-md-6 row">
                        @Html.LabelFor(m => m.years_experience,new { @class = "form-label col-sm-5 text-start" })
                        @Html.TextBoxFor(m => m.years_experience, new { @class = "form-control col-sm-7" })
                        @Html.ValidationMessageFor(m => m.years_experience, "", new { @class = "text-danger text-end" })
                    </div>
                    <div class="col-md-6 row">
                        @Html.LabelFor(m => m.qualification,new { @class = "form-label col-sm-5 text-start" })
                        @Html.DropDownListFor(
                    m => m.qualification.Id,
                    new SelectList(Model.QualificationDropDownList, "Value", "Text"), new {@class = "form-control col-sm-7" })
                        @Html.ValidationMessageFor(m => m.qualification, "", new { @class = "text-danger text-end" })
                    </div>
                </div>



            </div>
            <div id ="createStaffBtn" class="card-footer">
                <input  type="submit" value="Create" class="btn btn-primary" onclick="return jsvalidateform();" />
            </div>
        }

        <div class="col-md-12 text-center">
            <a id="addAnotherStaff" href="../Admin/Create" class="btn btn-primary" style="display:none">Add Another Staff</a>
        </div>
    </div>

</div>
<script src="~/js/jquery.datetextentry.js" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $('#date_of_birth').datetextentry(
            {
                field_width_day: 100,
                field_width_month: 100,
                field_width_year: 100,
                field_width_sep: 10,
                max_date: function () { return this.get_today(); },
                max_date_message: 'Date must not be in the future',
                errorbox_x: -120,
                errorbox_y: 32,
            });
        var Emp_numExists = '@ViewData["Emp_numExists"]';

        if (Emp_numExists.toLocaleLowerCase()=='true') {
                 swal({
                title: "Duplicate Employee Number",
                text: "A staff with employee number " + $('#emp_number').val() +" Aready Exists, Please set a unique Employee Number",
                icon: "error",
                dangerMode: true,
            })
        }
        var StaffCreated = '@ViewData["StaffCreated"]';
        if (StaffCreated.toLocaleLowerCase() == "true") {
            $('#emp_number').prop("disabled", true);
            $('#first_name').prop("disabled", true);
            $('#last_name').prop("disabled", true);
            $('#gender_Id').prop("disabled", true);
            $('#qualification_Id').prop("disabled", true);
            $('#years_experience').prop("disabled", true);
            $('#years_experience').prop("disabled", true);
            $('#date_of_birth').datetextentry('set_readonly', true);
            $('#createStaffBtn').hide();
            $('#addAnotherStaff').fadeIn();

            swal({
                title: "Success",
                text: "Staff has been added successfully",
                icon: "success",
                
            })


        }

    });

    if (window.history.replaceState) {
        window.history.replaceState(null, null, window.location.href);
    }
    function jsvalidateform(){


        if ($('#gender_Id').val() == 0) {
            $('#gender_Id').val(null);
           
        }

        if ($('#qualification_level').val() == 0) {
            $('#qualification_level').val(null);

        }
        if ($('#years_experience').val())

        if ($('#years_experience').val() == '') {
            $('#years_experience').val(null);
            
        }

        
        return true;
    }
</script>
